==4240== Helgrind, a thread error detector
==4240== Copyright (C) 2007-2024, and GNU GPL'd, by OpenWorks LLP et al.
==4240== Using Valgrind-3.25.1 and LibVEX; rerun with -h for copyright info
==4240== Command: ./philo 2 410 200 200 2
==4240== 
==4240== ---Thread-Announcement------------------------------------------
==4240== 
==4240== Thread #3 was created
==4240==    at 0x4999D03: clone (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4999E60: ??? (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4914DBF: ??? (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4915A90: pthread_create (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4001B14: creat_th (creat.c:39)
==4240==    by 0x4001B9D: creat_join_th (creat.c:56)
==4240==    by 0x400165B: main (main_philo.c:71)
==4240== 
==4240== ---Thread-Announcement------------------------------------------
==4240== 
==4240== Thread #4 was created
==4240==    at 0x4999D03: clone (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4999E60: ??? (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4914DBF: ??? (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4915A90: pthread_create (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4001BCB: creat_join_th (creat.c:58)
==4240==    by 0x400165B: main (main_philo.c:71)
==4240== 
==4240== ----------------------------------------------------------------
==4240== 
==4240==  Lock at 0x4A7F0E0 was first observed
==4240==    at 0x485BFCB: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==4240==    by 0x4001A47: create_fork (creat.c:24)
==4240==    by 0x40015E9: main (main_philo.c:67)
==4240==  Address 0x4a7f0e0 is 0 bytes inside a block of size 80 alloc'd
==4240==    at 0x484D8D8: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==4240==    by 0x40019F6: create_fork (creat.c:20)
==4240==    by 0x40015E9: main (main_philo.c:67)
==4240==  Block was alloc'd by thread #1
==4240== 
==4240==  Lock at 0x4A7F108 was first observed
==4240==    at 0x485BFCB: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==4240==    by 0x4001A47: create_fork (creat.c:24)
==4240==    by 0x40015E9: main (main_philo.c:67)
==4240==  Address 0x4a7f108 is 40 bytes inside a block of size 80 alloc'd
==4240==    at 0x484D8D8: malloc (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==4240==    by 0x40019F6: create_fork (creat.c:20)
==4240==    by 0x40015E9: main (main_philo.c:67)
==4240==  Block was alloc'd by thread #1
==4240== 
==4240==  Lock at 0x1FFEFFFBB8 was first observed
==4240==    at 0x485BFCB: pthread_mutex_init (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==4240==    by 0x4001F28: initial (fill_and_initial.c:55)
==4240==    by 0x4001628: main (main_philo.c:69)
==4240==  Address 0x1ffefffbb8 is on thread #1's stack
==4240==  in frame #4, created by main (main_philo.c:48)
==4240== 
==4240== Possible data race during write of size 4 at 0x1FFEFFFBB0 by thread #3
==4240== Locks held: 3, at addresses 0x4A7F0E0 0x4A7F108 0x1FFEFFFBB8
==4240==    at 0x4002302: ft_eat (simulation.c:38)
==4240==    by 0x40014C1: routine (main_philo.c:37)
==4240==    by 0x4915260: ??? (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4999D13: clone (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240== 
==4240== This conflicts with a previous read of size 4 by thread #4
==4240== Locks held: none
==4240==    at 0x4001FB4: fuul_food (monitor.c:20)
==4240==    by 0x40021E5: monitor (monitor.c:77)
==4240==    by 0x4915260: ??? (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4999D13: clone (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==  Address 0x1ffefffbb0 is on thread #1's stack
==4240==  in frame #4, created by main (main_philo.c:48)
==4240== 

Helgrind: ../../helgrind/hg_main.c:5411 (hg_handle_client_request): Assertion 'found' failed.

host stacktrace:
==4240==    at 0x5802898A: ??? (in /usr/libexec/valgrind/helgrind-amd64-linux)
==4240==    by 0x58028ACF: ??? (in /usr/libexec/valgrind/helgrind-amd64-linux)
==4240==    by 0x58028C65: ??? (in /usr/libexec/valgrind/helgrind-amd64-linux)
==4240==    by 0x580107F9: ??? (in /usr/libexec/valgrind/helgrind-amd64-linux)
==4240==    by 0x5803D734: ??? (in /usr/libexec/valgrind/helgrind-amd64-linux)
==4240==    by 0x58088CD9: ??? (in /usr/libexec/valgrind/helgrind-amd64-linux)
==4240==    by 0x580F53C7: ??? (in /usr/libexec/valgrind/helgrind-amd64-linux)

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 4240)
==4240==    at 0x4856701: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==4240==    by 0x4001C07: creat_join_th (creat.c:64)
==4240==    by 0x400165B: main (main_philo.c:71)
client stack range: [0x1FFEFFD000 0x1FFF000FFF] client SP: 0x1FFEFFFA50
valgrind stack range: [0x1002E8E000 0x1002F8DFFF] top usage: 18392 of 1048576

Thread 2: status = VgTs_WaitSys syscall 230 (lwpid 4241)
==4240==    at 0x49621E3: clock_nanosleep (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x496E366: nanosleep (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4999A19: usleep (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x400232F: ft_eat (simulation.c:44)
==4240==    by 0x40014C1: routine (main_philo.c:37)
==4240==    by 0x4915260: ??? (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4999D13: clone (in /usr/lib/x86_64-linux-gnu/libc.so.6)
client stack range: [0x4E80000 0x567EFFF] client SP: 0x567EE10
valgrind stack range: [0x1004910000 0x1004A0FFFF] top usage: 3368 of 1048576

Thread 3: status = VgTs_WaitSys syscall 230 (lwpid 4242)
==4240==    at 0x49621E3: clock_nanosleep (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x496E366: nanosleep (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4999A19: usleep (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4002439: ft_sleep (simulation.c:72)
==4240==    by 0x40014D2: routine (main_philo.c:39)
==4240==    by 0x4915260: ??? (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==4240==    by 0x4999D13: clone (in /usr/lib/x86_64-linux-gnu/libc.so.6)
client stack range: [0x5681000 0x5E7FFFF] client SP: 0x5E7FE10
valgrind stack range: [0x1004A14000 0x1004B13FFF] top usage: 3608 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.